<div class="jumbotron">
    <h1>BANCO NIX</h1>
    <h2 class="lead">O maior banco da América Latina.</h2>
</div>


<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/js/bootstrap-datepicker.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.css">
<link href="Content/style.css" rel="stylesheet">


<script>


    var skip = 0;                           // Quantidade de registros para ignorar.
    var pagesTotal = 0;                     // Total de páginas existentes.
    var pageCurrent = 1;                    // Página atual.
    var lastPagePreviousPagination = 0;     // Última página da paginação anterior.

    //-------------------------------
    // Valores que podem ser setados:
    //-------------------------------
    const maxNumPages = 02 ;     // Define o número máximo de páginas mostradas na paginação.
    const take = 03;            // Define o número de registros por página.

    //Click no botão Anterior da paginação.
    function paginaAnterior() {
        let indexPageCurrent = 0;
        let firstPageCurrent = parseInt($('.card-body li:nth-child(3)').text());

        // Caso não seja a primeira da paginação atual.
        if (pageCurrent != firstPageCurrent) {
            indexPageCurrent = (pageCurrent % maxNumPages) + 1;

            // Caso for a última pagina
            if (indexPageCurrent == 1)
                $('.pagination .page-item:eq(' + maxNumPages + ')').trigger('click');
            else
                $('.pagination .page-item:eq(' + (indexPageCurrent - 1) + ')').trigger('click');

        }
        else {
            // Caso seja a primeira da paginação atual.
            IrParaPaginacaoAnterior();
        }

        return false;
    }

    //Click no botão Próximo da paginação.
    function proximaPagina() {
        let indexPageCurrent = 0;

        // Caso não seja a última página da paginação atual.
        if (!(pageCurrent % maxNumPages == 0)) {
            indexPageCurrent = (pageCurrent % maxNumPages) + 1;
            $('.pagination .page-item:eq(' + (indexPageCurrent + 1) + ')').trigger('click');
        }
        else {

            // Caso seja a última página da paginação atual
            IrParaProximaPaginacao();
        }

        return false;
    }

    function IrParaProximaPaginacao() {

        //Obtém a última página da paginação atual.
        var auxLastPageCurrent = parseInt($('.card-body li:nth-child(' + (parseInt(maxNumPages) + 2) + ')').text());

        //Impede de extrapolar os limites da paginação.
        if (!isNaN(auxLastPageCurrent) && lastPagePreviousPagination < pagesTotal) {
            lastPagePreviousPagination = auxLastPageCurrent;
            skip = lastPagePreviousPagination;

            // Atualiza a página que está ativa.
            pageCurrent = auxLastPageCurrent + 1;

            postCasos();
        }

        return false;
    }

    function IrParaPaginacaoAnterior() {

        // Atualiza a página que está ativa.
        pageCurrent = lastPagePreviousPagination;
        lastPagePreviousPagination = (pageCurrent - maxNumPages);
        skip = lastPagePreviousPagination;

        postCasos();

        return false;
    }

    //Click no botão >> da paginação.
    function ultimaPagina() {

        //Nem sempre a última página via possuir uma quantidade de maxNumPages, então:
        if (pagesTotal % maxNumPages == 0)
            lastPagePreviousPagination = (pagesTotal - maxNumPages);
        else {
            lastPagePreviousPagination = pagesTotal - (pagesTotal % maxNumPages);
        }

        skip = pagesTotal - 1;
        pageCurrent = pagesTotal;

        postCasos();

        return false;
    }

    //Click no botão << da paginação
    function primeiraPagina() {
        lastPagePreviousPagination = 0;
        skip = 0;
        pageCurrent = 1;

        postCasos();

        return false;
    }

    function postCasos() {
        var objCasos = new Object();
        objCasos.estudoId = $("#id").val();
        objCasos.skip = skip;
        objCasos.take = take;

        $.getJSON("http://localhost:54450/api/Transferencia/", function (res) {
            $("#tblCasos").find('tbody').html('');
            var count = 0;
            $.each(res, function (index, value) {
                count++;
                var $tr = ($('<tr>').append($('<td>').append(value.id)).append($('<td>').append('11/11/1111'))
                    .append($('<td>').append(value.beneficiario.nome))
                    .append($('<td>').append(value.pagador.nome))
                    .append($('<td>').append(value.tipo))
                    .append($('<td>').append(value.valor))
                    .append($('<td>').append(value.status))
                );
                $("#tblCasos").find('tbody').append($tr);
            });

            let pages = count / take;
            $("#totalItens").text("Total de transferências: " + count);

            let remainder = count % take;

            // Adicionando uma página a mais na paginação.
            if (remainder > 0) {
                pages += 1;
            }

            pagesTotal = parseInt(pages);

            $("ul.pagination").html('');

            //HTML 'fixos': botões << e Anterior.
            $("ul.pagination").append("<li class='page-item disabled' id='previous' '><a class='page-link primeira-pagina' href='javascript:void(0);' tabindex='-1'>&laquo;</a></li>"); // botão <<
            $("ul.pagination").append("<li class='page-item '><a class='page-link pagina-anterior' href='javascript:void(0);' aria-label='Página Anterior'><span aria-hidden='true'>Anterior</span></a></li>");
            debugger;
            //HTML 'dinâmico': registros do grid.
            for (var i = 1, checkLastPage = lastPagePreviousPagination; i <= maxNumPages && checkLastPage < pagesTotal; i++ , checkLastPage++) {
                var xxx = $("<li class='page-item'><a class='page-link'>" + (parseInt(i) + parseInt(lastPagePreviousPagination)) + "</a></li>").click(function () {
                    skip = $(this).text() - 1;
                    postCasos();
                    pageCurrent = parseInt($(this).text());
                });
                $("ul.pagination").append(xxx);
            }

            //HTML 'fixos': botões >> e Próximo.
            $("ul.pagination").append("<li class='page-item'><a class='page-link proxima-pagina' href='javascript:void(0);' aria-label='Próxima página'><span aria-hidden='true'>Próximo</span> </a></li>");
            $("ul.pagination").append("<li class='page-item' id='next'><a class='page-link ultima-pagina' href='javascript:void(0);' aria-label='Última página'>&raquo;</a></li>"); // botão >>

            //Remove todas as classes active.
            $('.pagination .page-item').each(function (index) { $(this).removeClass('active') });

            let indexPageCurrent = 0;

            // Caso  seja a última página da paginação atual
            if (pageCurrent % maxNumPages == 0) {
                indexPageCurrent = maxNumPages + 1;
            }
            else {

                // Caso não seja a última página da paginação atual
                indexPageCurrent = (pageCurrent % maxNumPages) + 1;
            }

            $('.pagination .page-item:eq(' + indexPageCurrent + ')').addClass('active');

            desabilitarBotoesPaginacao(indexPageCurrent);

        });

        //Realizar fadeIn no grid
        $("#tblCasos").hide();
        $("#tblCasos").fadeIn("fast");
    }

    function desabilitarBotoesPaginacao(indexPageCurrent) {

        //Desabilita o link do botão Anterior
        if (pageCurrent == 1) {
            $('.pagination .page-item:eq(1)').addClass('disabled');
        }
        else {
            $('.pagination .page-item:eq(1)').removeClass('disabled');
        }

        //Desabilita o link do botão <<
        let firstPageCurrent = parseInt($('.card-body li:nth-child(3)').text());
        if (firstPageCurrent == 1) {
            $('.pagination .page-item:eq(0)').addClass('disabled');
        }
        else {
            $('.pagination .page-item:eq(0)').removeClass('disabled');
        }

        //Desabilita o link do botão Próximo
        if (pageCurrent == pagesTotal) {

            $('.pagination .page-item:eq(' + (indexPageCurrent + 1) + ')').addClass('disabled');
        }
        else {
            $('.pagination .page-item:eq(' + (indexPageCurrent + 1) + ')').removeClass('disabled');
        }

        //Desabilita o link do botão >>
        if ((lastPagePreviousPagination + indexPageCurrent - 1) == pagesTotal) {
            $('.pagination .page-item:eq(' + (indexPageCurrent + 2) + ')').addClass('disabled');
        }
        else {
            $('.pagination .page-item:eq(' + (indexPageCurrent + 2) + ')').removeClass('disabled');
        }
    }


    $(document).ready(function () {

        $(document).on("click", "a.primeira-pagina", function () {
            primeiraPagina();
        });

        $(document).on("click", "a.pagina-anterior", function () {
            paginaAnterior();
        });

        $(document).on("click", "a.proxima-pagina", function () {
            proximaPagina();
        });

        $(document).on("click", "a.ultima-pagina", function () {
            ultimaPagina();
        });


        postCasos();

        // Evento de mudança na data do calendário
        $('#datePicker-Id .form-control').change(function () {
            var date = $('.form-control')[0].value;
            $.post("transferencia/list/", { skip: skip, take: take }, function (res) {
                if (res.success) {
                    if (res.id != null) {
                        $("#id").val(res.id);
                        skip = 0;
                        pagesTotal = 0;
                        lastPagePreviousPagination = 0;
                        primeiraPagina();
                    } else {
                    }
                }
                else {
                    alert(res.message);
                }
            });
        });

        //$('#anoReferencia').change(function () {
        //    var date = $('.form-control')[0].value;
        //    //TODO: serialize;
        //    $.post("/estudos/filter", { dataPrevisao: $("#dataPrevisao").val(), anoReferencia: $("#anoReferencia").val(), fonteDados: $("#fonteDados").val(), modoPrevisao: $("#modoPrevisao").val(), }, function (res) {
        //        if (res.success) {
        //            if (res.id != null) {
        //                $("#id").val(res.id);
        //                skip = 0;
        //                pagesTotal = 0;
        //                lastPagePreviousPagination = 0;
        //                primeiraPagina();
        //            } else {
        //            }
        //        }
        //        else {
        //            alert(res.message);
        //        }
        //    });
        //});


    });
</script>




<div class="container-fluid">
    <div class="animated fadeIn">

        <div class="row">
            <div class="col-lg-2">
                <div class="form-group">
                    <label>Data:</label>
                    <div id="datePicker-Id" class="input-group date datepicker" data-provide="datepicker" data-date-autoclose="true" ">
                        <input type="text" class="form-control" style="height: 25px; margin-top: -5px;" />
                        <div class="input-group-addon" style="margin-top: -5px; height: 24px;">
                            <span style="margin-left: -8px;"><img src="../Content/calendar.svg" alt="calendar" height="12" width="12" ></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-2">
                <div class="form-group">
                    <label for="fonteDados">Beneficiário:</label>
                    <select class="form-control" id="fonteDados">
                        <option></option>
                        <option>Fellipe</option>
                    </select>
                </div>
            </div>

            <div class="col-lg-2">
                <div class="form-group">
                    <label for="modo-previsao">Pagador</label>
                    <select class="form-control" id="pagador">
                        <option></option>
                        <option>João do caminhão</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="row" style="padding-top: 10px;">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <i class="fa fa-align-justify"></i> Casos
                    </div>
                    <div class="card-body">
                        <table id="tblCasos" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Data</th>
                                    <th>Beneficiário</th>
                                    <th>Pagador</th>
                                    <th>Tipo</th>
                                    <th>Valor</th>
                                    <th>Status</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <ul class="pagination"> </ul> <div id="totalItens"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>






